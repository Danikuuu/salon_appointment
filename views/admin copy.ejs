<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .header {
            padding: 20px;
            margin: 0;
            background-color: #343a40;
            color: #ffffff;
            text-align: center;
            position: sticky;
            top: 0;
            z-index: 1000;
        }
        .sidebar {
            background: rgba(25, 25, 25, 0.95);
            color: #ddd;
            width: 240px;
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            padding: 2rem 1rem;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.5);
            transition: width 0.3s ease;
        }
        .sidebar h2 {
            color: #bdac8e;
            text-align: center;
            font-size: 1.6rem;
            margin-bottom: 1.5rem;
            text-transform: uppercase;
        }
        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }
        .sidebar ul li {
            margin-bottom: 1rem;
        }
        .sidebar ul li a {
            color: #eee;
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            transition: background-color 0.3s ease;
            display: flex;
            align-items: center;
        }
        .sidebar ul li a:hover {
            background-color: #bdac8e;
            color: #fff;
        }
        .dropdown {
            display: none; /* Hidden by default */
            margin-left: 1rem; /* Indent dropdown items */
        }
        .content {
            margin-left: 240px;
            padding: 20px;
        }
        .card {
            margin: 20px 0;
        }
        .chart-container {
            position: relative;
            margin: 20px 0;
            height: 400px; /* Fixed height to prevent automatic resizing */
        }
        .chart-title {
            text-align: center;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .card {
            margin-bottom: 20px;
        }
        .chart-container {
            position: relative;
            width: 100%;
            height: 300px; /* Fixed height for all charts */
            margin-bottom: 40px;
        }
        canvas {
            width: 100% !important; /* Ensure canvas takes full width */
            height: 300px !important; /* Fixed height for charts */
        }
        .chart-title {
            text-align: center;
            margin-bottom: 10px;
        }
        .chart-container {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center the chart title and canvas */
}

.chart-title {
    margin-bottom: 10px; /* Add space between title and chart */
}
    </style>
</head>
<body>

<!-- Sidebar -->
<aside class="sidebar">
    <h2>Admin</h2>
    <ul>
        <li><a href="#" onclick="showSection('dashboard')"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
        <li><a href="#" onclick="showSection('profile')"><i class="fas fa-user-circle"></i> Profile</a></li>
        <li>
            <a href="#" onclick="toggleDropdown(event)"><i class="fas fa-calendar-check"></i> Appointment Management <i class="fas fa-chevron-down"></i></a>
            <div class="dropdown">
                <a href="#" onclick="showSection('service-management')">Service Management</a><br>
                <a href="#" onclick="showSection('appointments')">Appointments</a><br>
                <a href="#" onclick="showSection('manage-appointments')">Manage Appointments</a><br>
                <a href="#" onclick="showSection('add-appointments')">Add Appointments</a>
            </div>
        </li>
        <li><a href="#" onclick="showSection('feedback')"><i class="fas fa-comment-dots"></i> Feedbacks</a></li>
        <li><a href="/login"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
    </ul>
</aside>

<!-- Main Content -->
<div class="content">
    <!-- Dashboard Section -->
    <div id="dashboard" class="section active">
        <div class="container">
            <h1 class="my-4">Admin Dashboard</h1>
            
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card text-white bg-primary">
                        <div class="card-header">Total Users</div>
                        <div class="card-body">
                            <h5 class="card-title"><%= totalUsers %></h5>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-white bg-success">
                        <div class="card-header">Total Appointments</div>
                        <div class="card-body">
                            <h5 class="card-title"><%= totalAppointments %></h5>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-white bg-warning">
                        <div class="card-header">Total Feedbacks</div>
                        <div class="card-body">
                            <h5 class="card-title"><%= feedbackCount %></h5>
                        </div>
                    </div>
                </div>
            </div>
    
            <div class="row mb-4">
                <div class="col-md-4">
                    <label for="timeRange">Select Time Range:</label>
                    <select id="timeRange" class="form-control">
                        <option value="today">Today</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly">Monthly</option>
                        <option value="annually">Annually</option>
                    </select>
                </div>
            </div>
    
            <div class="row">
                <div class="col-md-8 chart-container">
                    <h3 class="chart-title">Appointments and Feedbacks Chart</h3>
                    <canvas id="combinedChart"></canvas>
                </div>
                <div class="col-md-4 chart-container">
                    <h3 class="chart-title">Appointment Status</h3>
                    <canvas id="appointmentStatusChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    

    <!-- Other sections can be added like this -->
    <div id="profile" class="section" style="display:none;">
        <h2>Your Profile</h2>
        <div>
            <%= admin.email %>
        </div>
    </div>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .section {
            margin-bottom: 20px;
        }
        .section h2 {
            margin-bottom: 10px;
            font-size: 1.2em;
            color: #555;
        }
        input[type="text"], input[type="date"], button {
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            cursor: pointer;
            background-color: #BDAC8E;
            color: #fff;
            border: none;
        }
        button:hover {
            background-color: #BDAC8E;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .total-appointments {
            font-weight: bold;
        }
        .appointments-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    </style>


<div id="service-management" class="section" style="display:none;">
    <h2>Manage Services</h2>
    <div class="container">
        <h1>Services Report</h1>
        
        <div class="actions">
            <div>
                <input type="text" id="searchService" placeholder="Search Services...">
                <button id="searchServices">Search</button>
                <button id="clearServiceSearch">Clear</button>
            </div>
            <div>
                <button id="exportServices">Export to CSV</button>
            </div>
        </div>

        <div>
            <h2 class="services-header">
                Services Utilized
                <span class="total-services">Total Services Availments: <span id="serviceCount">0</span></span>
            </h2>
            <table id="servicesTable">
                <thead>
                    <tr>
                        <th>Service Name</th>
                        <th>Times Availed</th>
                    </tr>
                </thead>
                <tbody>
                    <% serviceCounts.forEach(service => { %>
                        <tr>
                            <td><%= service.serviceName %></td>
                            <td><%= service.timesAvailed %></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="csvServicePreviewModal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; border: 1px solid #ccc; padding: 20px; z-index: 1000;">
    <h2>CSV Preview</h2>
    <pre id="csvPreviewContent"></pre>
    <button id="downloadCsv">Download CSV</button>
    <button id="closePreview">Close</button>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const serviceManagementSection = document.getElementById('service-management');
        serviceManagementSection.style.display = 'block'; // Show the section

        const searchServiceInput = document.getElementById('searchService');
        const searchServicesButton = document.getElementById('searchServices');
        const clearServiceSearchButton = document.getElementById('clearServiceSearch');
        const servicesTableBody = document.querySelector('#servicesTable tbody');
        const exportServicesButton = document.getElementById('exportServices');
        const csvPreviewModal = document.getElementById('csvServicePreviewModal');
        const csvPreviewContent = document.getElementById('csvPreviewContent');
        const downloadCsvButton = document.getElementById('downloadCsv');
        const closePreviewButton = document.getElementById('closePreview');

        // Search functionality
        searchServicesButton.addEventListener('click', () => {
            const searchTerm = searchServiceInput.value.toLowerCase();
            const rows = servicesTableBody.querySelectorAll('tr');
            let visibleRowCount = 0;

            rows.forEach(row => {
                const serviceName = row.cells[0].textContent.toLowerCase();
                if (serviceName.includes(searchTerm)) {
                    row.style.display = ''; // Show row
                    visibleRowCount++;
                } else {
                    row.style.display = 'none'; // Hide row
                }
            });

            document.getElementById('serviceCount').textContent = visibleRowCount;
        });

        // Clear functionality
        clearServiceSearchButton.addEventListener('click', () => {
            searchServiceInput.value = '';
            const rows = servicesTableBody.querySelectorAll('tr');

            rows.forEach(row => {
                row.style.display = ''; // Show all rows
            });

            document.getElementById('serviceCount').textContent = rows.length;
        });

        // Export to CSV functionality
        exportServicesButton.addEventListener('click', () => {
            const rows = servicesTableBody.querySelectorAll('tr');
            let csvContent = 'Service Name,Times Availed\n'; // CSV header

            rows.forEach(row => {
                if (row.style.display !== 'none') { // Only include visible rows
                    const serviceName = row.cells[0].textContent;
                    const timesAvailed = row.cells[1].textContent;
                    csvContent += `${serviceName},${timesAvailed}\n`;
                }
            });

            // Display CSV preview
            csvPreviewContent.textContent = csvContent; // Set preview content
            csvPreviewModal.style.display = 'block'; // Show modal
        });

        // Download CSV functionality
        downloadCsvButton.addEventListener('click', () => {
            const blob = new Blob([csvPreviewContent.textContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'services_report.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });

        // Close preview modal
        closePreviewButton.addEventListener('click', () => {
            csvPreviewModal.style.display = 'none'; // Hide modal
        });
    });
</script>



    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .section {
            margin-bottom: 20px;
        }
        .section h2 {
            margin-bottom: 10px;
            font-size: 1.2em;
            color: #555;
        }
        input[type="text"], input[type="date"], button {
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            cursor: pointer;
            background-color: #BDAC8E;
            color: #fff;
            border: none;
        }
        button:hover {
            background-color: #BDAC8E;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .total-appointments {
            font-weight: bold;
        }
        .appointments-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
    background-color: #e2d9b2; /* Cornsilk */
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #8B4513;
    width: 50%;
    border-radius: 8px;
}

.modal-content h2 {
    color: #8B4513;
    font-size: 24px;
    margin-bottom: 20px;
}

.modal-content label {
    display: block;
    margin: 10px 0 5px;
    color: #8B4513;
    font-weight: bold;
}

.modal-content input,
.modal-content textarea {
    width: 100%;
    padding: 8px;
    margin-bottom: 15px;
    border: 1px solid #D2B48C;
    border-radius: 4px;
}
.close {
    color: #8B4513;
    font-size: 28px;
    font-weight: bold;
    float: right;
    cursor: pointer;
}

.close:hover {
    color: #A0522D;
}

.feedback-item {
    padding: 1rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #f9f9f9;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.feedback-name,
.feedback-email,
.feedback-rating,
.feedback-message {
    margin: 0.5rem 0;
    font-size: 1rem;
    color: #333;
}
    </style>
    <div id="appointments" class="section" style="display:none;">
        <div>
            <div class="container">
                <h1>Appointment Reports</h1>
                
                <div class="actions">
                    <div>
                        <input type="text" id="searchQuery" placeholder="Search...">
                        <button id="searchAppointments">Search</button>
                        <button id="clearSearch">Clear</button>
                    </div>
                    <div>
                        <input type="date" id="startDate" required>
                        <button id="filterAppointments">Filter</button>
                        <button id="clearFilters">Clear</button>
                    </div>
                    <div>
                        <button id="exportAppointments">Export to CSV</button>
                    </div>
                </div>
        
                <div>
                    <div class="appointments-header">
                        <h2>All Appointments</h2>
                        <div class="total-appointments">
                            Total Appointments: <span id="appointmentCount"><%= completedAppointmentsCount %></span>
                        </div>
                    </div> 
                    <table id="appointmentsTable">
                        <thead>
                            <tr>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Address</th>
                                <th>Contact</th>
                                <th>Gender</th>
                                <th>Service</th>
                                <th>Appointment Date</th>
                                <th>Appointment Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% completedAppointments.forEach(appointment => { %>
                                <tr>
                                    <td><%= appointment.customerId.fullName %></td> 
                                    <td><%= appointment.customerId.email %></td>
                                    <td><%= appointment.customerId.address %></td>
                                    <td><%= appointment.customerId.contact %></td>
                                    <td><%= appointment.customerId.gender %></td>
                                    <td><%= appointment.service %></td>
                                    <td><%= appointment.date.toDateString() %></td>
                                    <td><%= appointment.time %></td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="csvPreviewModal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; border: 1px solid #ccc; padding: 20px; z-index: 1000;">
        <h2>CSV Preview</h2>
        <pre id="csvPreviewContent"></pre>
        <button id="downloadCsv">Download CSV</button>
        <button id="closePreview">Close</button>
    </div>
    <script>
        // Function to filter appointments based on search query
        function filterAppointments() {
            const query = document.getElementById('searchQuery').value.toLowerCase();
            const rows = document.querySelectorAll('#appointmentsTable tbody tr');
            
            let count = 0; // To count matched appointments
    
            rows.forEach(row => {
                const cells = row.getElementsByTagName('td');
                let match = false;
    
                // Check each cell in the row for search query
                for (let i = 0; i < cells.length; i++) {
                    const cell = cells[i];
                    if (cell.textContent.toLowerCase().includes(query)) {
                        match = true;
                        break; // Stop checking once a match is found
                    }
                }
    
                // Show or hide the row based on the match
                if (match) {
                    row.style.display = ''; // Show row
                    count++;
                } else {
                    row.style.display = 'none'; // Hide row
                }
            });
    
            // Update appointment count
            document.getElementById('appointmentCount').textContent = count;
        }
    
        // Function to filter appointments based on start date
        function filterByDate() {
            const selectedDate = document.getElementById('startDate').value;
            const rows = document.querySelectorAll('#appointmentsTable tbody tr');
            
            let count = 0; // To count matched appointments
    
            rows.forEach(row => {
                const appointmentDateCell = row.cells[6]; // Assuming appointment date is in the 7th column (index 6)
                const appointmentDate = new Date(appointmentDateCell.textContent).toISOString().split('T')[0]; // Format date to YYYY-MM-DD
    
                // Show or hide the row based on the date match
                if (!selectedDate || appointmentDate === selectedDate) {
                    row.style.display = ''; // Show row
                    count++;
                } else {
                    row.style.display = 'none'; // Hide row
                }
            });
    
            // Update appointment count
            document.getElementById('appointmentCount').textContent = count;
        }
    
        // Add event listener for search input
        document.getElementById('searchQuery').addEventListener('keyup', filterAppointments);
    
        // Add event listener for date input
        document.getElementById('startDate').addEventListener('input', function() {
            filterAppointments(); // Call to search function to ensure search query is also considered
            filterByDate(); // Call to date filter
        });
    
        // Optionally, add event listener for the clear buttons
        document.getElementById('clearSearch').addEventListener('click', function() {
            document.getElementById('searchQuery').value = ''; // Clear the input
            filterAppointments(); // Refresh the table to show all appointments
        });
    
        document.getElementById('clearFilters').addEventListener('click', function() {
            document.getElementById('startDate').value = ''; // Clear the date input
            filterAppointments(); // Refresh the table to show all appointments
        });
    </script>
<script>
    function generateCSVContent() {
        const rows = document.querySelectorAll('#appointmentsTable tr');
        const csvContent = [];

        rows.forEach(row => {
            const cols = row.querySelectorAll('td, th');
            const rowData = [];
            cols.forEach(col => {
                // Escape double quotes in CSV
                let text = col.innerText.replace(/"/g, '""');
                rowData.push(`"${text}"`); // Wrap text in quotes
            });
            csvContent.push(rowData.join(',')); // Join cells with commas
        });

        return csvContent.join('\n'); // Join rows with newlines
    }

    function showCsvPreview() {
        const csvContent = generateCSVContent();
        document.getElementById('csvPreviewContent').textContent = csvContent; // Display CSV content in the modal
        document.getElementById('csvPreviewModal').style.display = 'block'; // Show the modal
    }

    function downloadCSV(filename) {
        const csvContent = generateCSVContent();
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const url = URL.createObjectURL(blob);

        // Create a temporary link to trigger the download
        const link = document.createElement('a');
        link.setAttribute('href', url);
        link.setAttribute('download', filename);
        document.body.appendChild(link);
        link.click(); // Simulate a click to trigger the download
        document.body.removeChild(link); // Remove the link from the DOM
    }

    // Add event listeners
    document.getElementById('exportAppointments').addEventListener('click', showCsvPreview);
    
    document.getElementById('downloadCsv').addEventListener('click', function() {
        downloadCSV('appointments.csv'); // Call the function with a filename
        document.getElementById('csvPreviewModal').style.display = 'none'; // Hide the modal after downloading
    });

    document.getElementById('closePreview').addEventListener('click', function() {
        document.getElementById('csvPreviewModal').style.display = 'none'; // Hide the modal
    });
</script>
    
    <div id="manage-appointments" class="section" style="display:none;">
        <h2>Appointments List</h2>
        <div>
            <table class="appointments-table">
                <thead>
                    <tr>
                        <th>Customer Name</th>
                        <th>Service</th>
                        <th>Status</th>
                        <th>Date</th>
                        <th>Time</th>
                        <th>Notes</th>
                        <th>Actions</th> <!-- New column for action buttons -->
                    </tr>
                </thead>
                <tbody>
                    <% appointments.forEach(appointment => { %>
                        <tr>
                            <td><%= appointment.customerId.fullName %></td> 
                            <td><%= appointment.service %></td>
                            <td><%= appointment.status %></td>
                            <td><%= appointment.date.toDateString() %></td>
                            <td><%= appointment.time %></td>
                            <td><%= appointment.notes %></td>
                            <td style="display: flex;">

                                <button onclick="rescheduleAppointment('<%= appointment._id %>', '<%= appointment.date.toISOString() %>', '<%= appointment.time %>', '<%= appointment.notes %>', '<%= appointment._id %>')" <% if (appointment.status === 'completed') { %> disabled <% } %>>Reschedule</button> 
                                <div id="rescheduleModal_<%= appointment._id %>" class="modal" style="display: none;">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('rescheduleModal_<%= appointment._id %>')">&times;</span>
                                        <h2>Reschedule Appointment</h2>
                                        <form id="rescheduleForm" action="/admin/reschedule-appointment" method="post">
                                            <input type="hidden" id="appointmentId" name="appointmentId" value="<%= appointment._id %>">
                                    
    
                                            <label for="rescheduleDate">New Date:</label>
                                            <input type="date" id="rescheduleDate_<%= appointment._id %>" name="rescheduleDate" required>
                                            
                                            <label for="rescheduleTime">New Time:</label>
                                            <input type="time" id="rescheduleTime_<%= appointment._id %>" name="rescheduleTime" required>
                                            
                                            <label for="rescheduleNotes">Notes:</label>
                                            <textarea id="rescheduleNotes_<%= appointment._id %>" name="rescheduleNotes" rows="4"></textarea>
                                            
                                            <button type="submit">Confirm Reschedule</button>
                                        </form>
                                    </div>
                                </div>
                                <script>
                                    function rescheduleAppointment(appointmentId, date, time, notes, modalId) {
                                        // Set the appointment ID in the modal
                                        document.getElementById('appointmentId').value = appointmentId;
                        
                                        // Set the date, time, and notes in the modal
                                        document.getElementById('rescheduleDate_' + appointmentId).value = date.split('T')[0];
                                        document.getElementById('rescheduleTime_' + appointmentId).value = time;
                                        document.getElementById('rescheduleNotes_' + appointmentId).value = notes;
                        
                                        // Show the modal
                                        document.getElementById('rescheduleModal_' + appointmentId).style.display = 'block';
                                    }
                        
                                    function closeModal(modalId) {
                                        document.getElementById(modalId).style.display = 'none';
                                    }
                        
                                    // Close the modal when the user clicks outside of it
                                    window.onclick = function(event) {
                                        const modals = document.querySelectorAll('.modal');
                                        modals.forEach(modal => {
                                            if (event.target === modal) {
                                                modal.style.display = 'none';
                                            }
                                        });
                                    }
                                </script>

                                <form action="/admin/delete-appointment/<%= appointment._id %>" method="post">
                                    <button class="action-button cancel" type="submit"
                                    <% if (appointment.status === 'completed') { %> disabled <% } %>
                                    >
                                        Cancel
                                    </button>
                                </form>                                

                                <form action="/admin/approve-appointment/<%= appointment._id %>" method="post">
                                    <button class="action-button approve" 
                                    <% if (appointment.status !== 'for approval') { %> disabled <% } %>
                                >
                                    Approve
                                </button>
                                </form>
                                <form action="/admin/complete-appointment/<%= appointment._id %>" method="post">
                                    <button class="action-button approve"
                                    <% if (appointment.status == 'completed' || appointment.status == 'for approval') { %> disabled <% } %>
                                    >
                                        Complete
                                    </button>
                                </form>    

                            </td>
                            
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
    <div id="add-appointments" class="section" style="display:none; padding: 20px; background-color: #f5f5f0; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);">
        <h2 style="color: #5c3a25; text-align: center;">Create New Appointment</h2>
        <form id="bookingForm" action="/admin/add-booking" method="post">
            <!-- Page 1: User Information -->
            <div id="page1" class="modal-page" style="display: block; margin-bottom: 20px;">
                <h2 style="color: #5c3a25;">User Information</h2>
                <label for="customerSelect" style="color: #5c3a25;">Select Customer:</label>
                <select id="customerSelect" name="customerId" onchange="populateUserData()" style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
                    <option value="">--Select a Customer--</option>
                    <% users.forEach(user => { %>
                        <option value="<%= user._id %>" data-id="<%= user._id %>" data-fullname="<%= user.fullName %>" data-email="<%= user.email %>" data-address="<%= user.address %>" data-contact="<%= user.contact %>">
                            <%= user.fullName %>
                        </option>
                    <% }) %>
                </select>
            
                <input type="hidden" id="customerId" value="">
            
                <label for="userName" style="color: #5c3a25;">Name:</label>
                <input type="text" id="userName" name="userName" required readonly style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
            
                <label for="userEmail" style="color: #5c3a25;">Email:</label>
                <input type="email" id="userEmail" name="userEmail" required readonly style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
            
                <label for="userAddress" style="color: #5c3a25;">Address:</label>
                <input type="text" id="userAddress" name="userAddress" readonly style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
            
                <label for="userContact" style="color: #5c3a25;">Contact:</label>
                <input type="tel" id="userContact" name="userContact" required readonly style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
            
                <button type="button" id="nextToPage2" style="background-color: #8b5a2b; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Next</button>
            </div>
    
            <!-- Page 2: Select Services -->
            <div id="page2" class="modal-page" style="display: none; margin-bottom: 20px;">
                <h2 style="color: #5c3a25;">Select Services</h2>
                <p style="color: #5c3a25;">Select a service and category.</p>
    
                <label for="serviceDropdown" style="color: #5c3a25;">Select Service:</label>
                <select id="serviceDropdown" name="service" required style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
                    <option value="">--Select Service--</option>
                    <option value="brows">EyeBrows</option>
                    <option value="makeup">Semi Permanent Makeup</option>
                    <option value="facial">Facial Treatment</option>
                    <option value="pico-laser">Black Doll/Pico Laser</option>
                    <option value="gluta">Glutathiones</option>
                    <option value="wax">Waxing</option>
                    <option value="laser">Hair Laser</option>
                    <option value="bleaching">Body Bleaching</option>
                    <option value="scrub">Scrub</option>
                    <option value="body-shaping">Body Shaping</option>
                    <option value="hand-care">Hand Care</option>
                    <option value="foot-care">Foot Care</option>
                    <option value="eyelash">Eyelash</option>
                    <option value="threading">Threading</option> 
                    <option value="package1">Black Doll Peel Package</option> 
                    <option value="package2">Contour Face and Body Package</option>
                </select>
    
                <label for="categoryDropdown" id="categoryLabel" style="color: #5c3a25; display: none;">Select Category:</label>
                <select id="categoryDropdown" name="category" style="display: none; width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;"></select>
    
                <label for="additionalDropdown" id="additionalLabel" style="color: #5c3a25; display: none;">Select Additional:</label>
                <select id="additionalDropdown" name="additional" style="display: none; width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;"></select>
    
                <div class="button-group" style="margin-top: 20px;">
                    <button type="button" id="backToPage1" style="background-color: #c4a48d; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Back</button>
                    <button type="button" id="nextToPage3" style="background-color: #8b5a2b; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Next</button>
                </div>
            </div>
    
            <!-- Page 3: Appointment Details -->
            <div id="page3" class="modal-page" style="display: none; margin-bottom: 20px;">
                <h2 style="color: #5c3a25;">Appointment Details</h2>
                <label for="appointmentDate" style="color: #5c3a25;">Appointment Date:</label>
                <input type="date" id="appointmentDate" name="appointmentDate" required style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
    
                <label for="appointmentTime" style="color: #5c3a25;">Appointment Time:</label>
                <input type="time" id="appointmentTime" name="appointmentTime" required style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;">
    
                <label for="appointmentNotes" style="color: #5c3a25;">Notes:</label>
                <textarea id="appointmentNotes" name="appointmentNotes" rows="4" placeholder="Enter any notes here" style="width: 100%; padding: 8px; margin: 8px 0; border: 1px solid #d0c5b6; border-radius: 5px;"></textarea>
    
                <div class="button-group" style="margin-top: 20px;">
                    <button type="button" id="backToPage2" style="background-color: #c4a48d; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Back</button>
                    <button type="button" id="nextToPage4" style="background-color: #8b5a2b; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Next</button>
                </div>
            </div>
    
            <!-- Page 4: Booking Summary -->
            <div id="page4" class="modal-page" style="display: none; margin-bottom: 20px;">
                <h2 style="color: #5c3a25;">Booking Summary</h2>
                <div id="bookingSummary" style="border: 1px solid #8b5a2b; padding: 20px; border-radius: 5px; background-color: #f9f3e8;"></div>
                <div style="margin-top: 20px;">
                    <button type="submit" id="confirmBooking" style="background-color: #8b5a2b; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Confirm Booking</button>
                    <button type="button" id="backToPage3" style="background-color: #c4a48d; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer;">Back</button>
                </div>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const pages = document.querySelectorAll('.modal-page'); // Get all modal pages
            const nextToPage2 = document.getElementById('nextToPage2');
            const nextToPage3 = document.getElementById('nextToPage3');
            const nextToPage4 = document.getElementById('nextToPage4');
            const backToPage1 = document.getElementById('backToPage1');
            const backToPage2 = document.getElementById('backToPage2');
            const backToPage3 = document.getElementById('backToPage3');
    
            // Function to update booking summary
            function updateBookingSummary() {
                const summaryDiv = document.getElementById("bookingSummary");
                const userName = document.getElementById("userName").value;
                const userEmail = document.getElementById("userEmail").value;
                const userAddress = document.getElementById("userAddress").value;
                const userContact = document.getElementById("userContact").value;
                const service = document.getElementById("serviceDropdown").value;
                const appointmentDate = document.getElementById("appointmentDate").value;
                const appointmentTime = document.getElementById("appointmentTime").value;
                const notes = document.getElementById("appointmentNotes").value;
    
                summaryDiv.innerHTML = `
                    <h3 style="color: #5c3a25;">Booking Details</h3>
                    <p><strong>Name:</strong> ${userName}</p>
                    <p><strong>Email:</strong> ${userEmail}</p>
                    <p><strong>Address:</strong> ${userAddress}</p>
                    <p><strong>Contact:</strong> ${userContact}</p>
                    <p><strong>Service:</strong> ${service}</p>
                    <p><strong>Appointment Date:</strong> ${appointmentDate}</p>
                    <p><strong>Appointment Time:</strong> ${appointmentTime}</p>
                    <p><strong>Notes:</strong> ${notes}</p>
                `;
            }
    
            // Navigation between pages
            nextToPage2.addEventListener("click", () => {
                pages[0].style.display = "none"; // Hide Page 1
                pages[1].style.display = "block"; // Show Page 2
            });
    
            nextToPage3.addEventListener("click", () => {
                pages[1].style.display = "none"; // Hide Page 2
                pages[2].style.display = "block"; // Show Page 3
            });
    
            backToPage1.addEventListener("click", () => {
                pages[0].style.display = "block"; // Show Page 1
                pages[1].style.display = "none"; // Hide Page 2
            });
    
            backToPage2.addEventListener("click", () => {
                pages[1].style.display = "block"; // Show Page 2
                pages[2].style.display = "none"; // Hide Page 3
            });
    
            nextToPage4.addEventListener("click", () => {
                pages[2].style.display = "none"; // Hide Page 3
                pages[3].style.display = "block"; // Show Page 4
                updateBookingSummary(); // Update the booking summary
            });
    
            backToPage3.addEventListener("click", () => {
                pages[2].style.display = "block"; // Show Page 3
                pages[3].style.display = "none"; // Hide Page 4
            });
        });
    </script>
    
    
    <script>
        document.getElementById('customerSelect').addEventListener('change', populateUserData);
        document.getElementById('serviceDropdown').addEventListener('change', updateCategories);
        document.getElementById('nextToPage2').addEventListener('click', () => showPage(2));
        document.getElementById('backToPage1').addEventListener('click', () => showPage(1));
        document.getElementById('nextToPage3').addEventListener('click', () => showPage(3));
        document.getElementById('backToPage2').addEventListener('click', () => showPage(2));
        document.getElementById('nextToPage4').addEventListener('click', () => showPage(4));
        document.getElementById('backToPage3').addEventListener('click', () => showPage(3));
        document.getElementById('confirmBooking').addEventListener('click', confirmBooking);
    
        function showPage(pageNumber) {
            const pages = document.querySelectorAll('.modal-page');
            pages.forEach((page, index) => {
                page.style.display = (index + 1 === pageNumber) ? 'block' : 'none';
            });
        }
    
        function populateUserData() {
            const selectedOption = document.getElementById('customerSelect').selectedOptions[0];
            if (selectedOption) {
                document.getElementById('customerId').value = selectedOption.dataset.id;
                document.getElementById('userName').value = selectedOption.dataset.fullname;
                document.getElementById('userEmail').value = selectedOption.dataset.email;
                document.getElementById('userAddress').value = selectedOption.dataset.address;
                document.getElementById('userContact').value = selectedOption.dataset.contact;
            } else {
                document.getElementById('customerId').value = '';
                document.getElementById('userName').value = '';
                document.getElementById('userEmail').value = '';
                document.getElementById('userAddress').value = '';
                document.getElementById('userContact').value = '';
            }
        }
    
        function updateCategories() {
            const service = document.getElementById('serviceDropdown').value;
            const categoryDropdown = document.getElementById('categoryDropdown');
            const additionalDropdown = document.getElementById('additionalDropdown');
            const categoryLabel = document.getElementById('categoryLabel');
            const additionalLabel = document.getElementById('additionalLabel');
    
            categoryDropdown.innerHTML = '';
            additionalDropdown.innerHTML = '';
    
            // Example categories based on service (you should replace this with actual data)
            if (service === 'brows') {
                categoryDropdown.innerHTML += '<option value="brow-shaping">Brow Shaping</option>';
                categoryDropdown.innerHTML += '<option value="brow-tinting">Brow Tinting</option>';
                categoryLabel.style.display = 'block';
                categoryDropdown.style.display = 'block';
            } else if (service === 'makeup') {
                categoryDropdown.innerHTML += '<option value="day-makeup">Day Makeup</option>';
                categoryDropdown.innerHTML += '<option value="night-makeup">Night Makeup</option>';
                categoryLabel.style.display = 'block';
                categoryDropdown.style.display = 'block';
            }
    
            // Example additional services (you should replace this with actual data)
            additionalDropdown.innerHTML += '<option value="">--Select Additional--</option>';
            additionalDropdown.innerHTML += '<option value="extra-time">Extra Time</option>';
            additionalDropdown.innerHTML += '<option value="consultation">Consultation</option>';
            additionalLabel.style.display = 'block';
            additionalDropdown.style.display = 'block';
        }
    
        function confirmBooking() {
            const summary = document.getElementById('bookingSummary');
            const customer = document.getElementById('customerSelect').selectedOptions[0].dataset.fullname;
            const service = document.getElementById('serviceDropdown').value;
            const category = document.getElementById('categoryDropdown').value;
            const date = document.getElementById('appointmentDate').value;
            const time = document.getElementById('appointmentTime').value;
            const notes = document.getElementById('appointmentNotes').value;
    
            summary.innerHTML = `
                <h3 style="color: #5c3a25;">Booking Details</h3>
                <p><strong>Customer:</strong> ${customer}</p>
                <p><strong>Service:</strong> ${service}</p>
                <p><strong>Category:</strong> ${category}</p>
                <p><strong>Date:</strong> ${date}</p>
                <p><strong>Time:</strong> ${time}</p>
                <p><strong>Notes:</strong> ${notes}</p>
            `;
            showPage(4);
        }
    </script>
    
        <div id="feedback" class="section" style="display:none;">
            <h2>User Feedbacks</h2>
            <div id="feedbackList">
                <div class="feedback-list">
                    <% feedbacks.forEach(feedback => { %>
                        <div class="feedback-item">
                            <p class="feedback-name"><strong>Name:</strong> <%= feedback.name %></p>
                            <p class="feedback-email"><strong>Email:</strong> <%= feedback.email %></p>
                            <p class="feedback-rating">
                                <strong>Rating:</strong>
                                <span class="stars">
                                    <% for (let i = 1; i <= 5; i++) { %>
                                        <% if (i <= feedback.rating) { %>
                                            <span class="star filled">&#9733;</span>
                                        <% } else { %>
                                            <span class="star">&#9734;</span>
                                        <% } %>
                                    <% } %>
                                </span>
                            </p>
                            <p class="feedback-message"><strong>Feedback:</strong> <%= feedback.message %></p>
                        </div>
                    <% }) %>
                </div>
                
            </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const timeRangeSelect = document.getElementById('timeRange');
    
        // Initialize the combined chart
        const combinedCtx = document.getElementById('combinedChart').getContext('2d');
        const combinedChart = new Chart(combinedCtx, {
            type: 'bar',
            data: {
                labels: ['Data'], // Update based on the selected time range
                datasets: [
                    {
                        label: 'Appointments',
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                        data: [],
                    },
                    {
                        label: 'Feedbacks',
                        backgroundColor: 'rgba(153, 102, 255, 0.6)',
                        data: [],
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                }
            }
        });
    
        // Initialize the appointment status donut chart
        const appointmentStatusCtx = document.getElementById('appointmentStatusChart').getContext('2d');
        const appointmentStatusChart = new Chart(appointmentStatusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Pending', 'For Approval', 'Completed'],
                datasets: [{
                    label: 'Appointment Status Distribution',
                    data: [0, 0, 0], // Initialize with zero values
                    backgroundColor: [
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)'
                    ],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                }
            }
        });
    
        function updateCharts(timeRange) {
            const appointmentsData = {
                today: [<%= JSON.stringify(appointmentsToday) %>],
                weekly: [<%= JSON.stringify(weeklyAppointments) %>],
                monthly: [<%= JSON.stringify(monthlyAppointments) %>],
                annually: [<%= JSON.stringify(annualAppointments) %>]
            };
    
            const feedbacksData = {
                today: [<%= JSON.stringify(feedBackToday) %>],
                weekly: [<%= JSON.stringify(weeklyFeedbacks) %>],
                monthly: [<%= JSON.stringify(monthlyFeedbacks) %>],
                annually: [<%= JSON.stringify(annualFeedbacks) %>]
            };
    
            // Update Combined Chart
            combinedChart.data.datasets[0].data = appointmentsData[timeRange]; // Appointments data
            combinedChart.data.datasets[1].data = feedbacksData[timeRange]; // Feedbacks data
            combinedChart.update();
    
            // Update Appointment Status Chart
            const pendingCount = <%= appointments.filter(a => a.status === "pending").length %>;
            const forApprovalCount = <%= appointments.filter(a => a.status === "for approval").length %>;
            const completedCount = <%= appointments.filter(a => a.status === "completed").length %>;
    
            appointmentStatusChart.data.datasets[0].data = [pendingCount, forApprovalCount, completedCount];
            appointmentStatusChart.update();
        }
    
        // Initial chart rendering
        updateCharts('today');
    
        // Event listener for time range selection
        timeRangeSelect.addEventListener('change', function() {
            updateCharts(this.value);
        });
    });

        // Function to toggle sections
        function showSection(sectionId) {
        // Hide all sections
        document.querySelectorAll('.section').forEach(section => {
            section.style.display = 'none';
        });
        // Show the selected section
        document.getElementById(sectionId).style.display = 'block';
    }

    // Toggle dropdown in the sidebar
    function toggleDropdown(event) {
        const dropdown = event.target.nextElementSibling;
        dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
    }
    </script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>