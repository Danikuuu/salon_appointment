<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Services Report</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .section {
            margin-bottom: 20px;
        }
        .section h2 {
            margin-bottom: 10px;
            font-size: 1.2em;
            color: #555;
        }
        input[type="text"], button {
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            cursor: pointer;
            background-color: #BDAC8E;
            color: #fff;
            border: none;
        }
        button:hover {
            background-color: #BDAC8E;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .total-services {
            font-weight: bold;
        }
        .services-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Services Report</h1>
        
        <div class="actions">
            <div>
                <input type="text" id="searchService" placeholder="Search Services...">
                <button id="searchServices">Search</button>
                <button id="clearServiceSearch">Clear</button>
            </div>
            <div>
                <button id="exportServices">Export to CSV</button>
            </div>
        </div>

        <div>
            <h2 class="services-header">
                Services Utilized
                <span class="total-services">Total Services Availments: <span id="serviceCount">0</span></span>
            </h2>
            <table id="servicesTable">
                <thead>
                    <tr>
                        <th>Service Name</th>
                        <th>Times Availed</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Services data will be populated here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        let servicesData = []; // Global variable to hold fetched services data

        // Function to populate the services table
        const populateServicesTable = (data) => {
            const tbody = document.querySelector('#servicesTable tbody');
            tbody.innerHTML = ''; // Clear existing data

            if (data.length === 0) {
                const row = `<tr><td colspan="2">No services found.</td></tr>`;
                tbody.innerHTML += row;
            } else {
                data.forEach(service => {
                    const row = `<tr>
                        <td>${service.name}</td>
                        <td>${service.timesAvailed}</td>
                    </tr>`;
                    tbody.innerHTML += row;
                });
            }

            // Update the total count of services
            document.getElementById('serviceCount').textContent = data.reduce((acc, curr) => acc + curr.timesAvailed, 0);
        };

        // Fetch services data from the backend when the page loads
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                const response = await fetch('/services'); // Adjust the endpoint as needed
                servicesData = await response.json(); // Parse the JSON response and store it in the global variable
                populateServicesTable(servicesData); // Populate the table with the fetched data
            } catch (error) {
                console.error('Error fetching services data:', error);
            }
        });

        // Search services
        document.getElementById('searchServices').addEventListener('click', async () => {
            const query = document.getElementById('searchService').value;

            if (query.trim() === '') {
                populateServicesTable(servicesData);
                return;
            }

            try {
                const response = await fetch(`/search-services?query=${query}`);
                const searchResults = await response.json();
                populateServicesTable(searchResults);
            } catch (error) {
                console.error('Error searching services:', error);
            }
        });

        // Clear search
        document.getElementById('clearServiceSearch').addEventListener('click', () => {
            document.getElementById('searchService').value = '';
            populateServicesTable(servicesData); // Show all services
        });

        // Export services to CSV
        document.getElementById('exportServices').addEventListener('click', () => {
            window.open('/export-services', '_blank'); // Adjust the endpoint as needed
        });
    </script>
</body>
</html>